#include <GL/glut.h>
#include <math.h>


float oldx=-0.7,oldy=0.5;

void drawkoch(float dir,float len,int iter) {
	float dirRad = (M_PI/180) * dir;
	float newX = oldx + len * cos(dirRad);
	float newY = oldy + len * sin(dirRad);
	if (iter==0) {
		glVertex2f(oldx, oldy);
		glVertex2f(newX, newY);
		oldx = newX;
		oldy = newY;
	}
	else {
		iter--;
		//draw the four parts of the side
		drawkoch(dir, len, iter);
		dir += 60.0;
		drawkoch(dir, len, iter);
		dir -= 120.0;
		drawkoch(dir, len, iter);
		dir += 60.0;
		drawkoch(dir, len, iter);
	}
}


void mydisplay(){
	glClear( GL_COLOR_BUFFER_BIT );
	glBegin(GL_LINES);
	glColor3f(1.0, 0.0, 0.0); // make it red
	//call drawkoch 3 times, one for each side of the triangle,changing direction each time

	drawkoch(0.0,0.015,4);
	drawkoch(-120.0, 0.015, 4);
	drawkoch(120.0,0.015,4);

	glEnd();
	glFlush();
}


int main(int argc, char** argv){
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE);
	glutInitWindowSize(600,600);
	glutInitWindowPosition(0,0);
	glutCreateWindow("Koch Snowflake - Marcus Young");
	glutDisplayFunc(mydisplay);
	glutMainLoop();
	return 0;
}
