#include <GL/glut.h>
#include <cmath>

void drawbezier() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1, 0, 0);

    float p0[2] = {100, 100};
    float p1[2] = {250, 400};
    float p2[2] = {400, 100};

    glBegin(GL_LINE_STRIP);
    for (float t = 0; t <= 1.0; t += 0.01) {
        float x = pow(1 - t, 2) * p0[0] + 2 * (1 - t) * t * p1[0] + pow(t, 2) * p2[0];
        float y = pow(1 - t, 2) * p0[1] + 2 * (1 - t) * t * p1[1] + pow(t, 2) * p2[1];
        glVertex2f(x, y);
    }
    glEnd();
    glFlush();
}

void init() {
    glClearColor(0, 0, 0, 0);
    gluOrtho2D(0, 500, 0, 500);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Simple Bezier Curve");
    init();
    glutDisplayFunc(drawbezier);
    glutMainLoop();
    return 0;
}
